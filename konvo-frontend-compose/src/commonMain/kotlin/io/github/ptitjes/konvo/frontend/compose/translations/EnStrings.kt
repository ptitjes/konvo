package io.github.ptitjes.konvo.frontend.compose.translations

import cafe.adriel.lyricist.*
import io.github.ptitjes.konvo.frontend.compose.agents.*
import io.github.ptitjes.konvo.frontend.compose.conversations.*
import io.github.ptitjes.konvo.frontend.compose.mcp.*
import io.github.ptitjes.konvo.frontend.compose.models.*
import io.github.ptitjes.konvo.frontend.compose.prompts.*
import io.github.ptitjes.konvo.frontend.compose.roleplay.*
import io.github.ptitjes.konvo.frontend.compose.settings.*
import io.github.ptitjes.konvo.frontend.compose.tools.*

@LyricistStrings(languageTag = "en-US", default = true)
internal val EnStrings = Strings(
    agents = AgentStrings(
        agentTypeDisplayName = {
            when (it) {
                AgentType.QuestionAnswer -> "Question & Answer"
                AgentType.Roleplay -> "Role-play"
            }
        }
    ),
    models = ModelStrings(
        configuredProvidersTitle = "Configured providers",
        configuredProvidersDescription = "Add, remove, and edit model providers.",
        addProviderAria = "Add provider",
        noProvidersMessage = "No model providers configured.",
        dragHandleAria = "Drag handle",
        editProviderAria = "Edit provider",
        deleteProviderAria = "Delete provider",
        deleteProviderDialogTitle = "Delete provider?",
        deleteProviderDialogText = { name -> "Are you sure you want to delete \"$name\"? This cannot be undone." },
        deleteConfirm = "Delete",
        cancel = "Cancel",
        nameLabel = "Name",
        typeLabel = "Type",
        removeProviderAria = "Remove provider",
        ollamaBaseUrlLabel = "Ollama base URL",
        anthropicApiKeyLabel = "Anthropic API key",
        openAiApiKeyLabel = "OpenAI API key",
        googleApiKeyLabel = "Google API key",
        nameEmptyError = "Name cannot be empty",
        nameUniqueError = "Name must be unique",
        addProviderConfirmAria = "Add provider",
        modelLabel = "Model",
    ),
    mcp = McpStrings(
        configuredServersTitle = "Configured MCP servers",
        configuredServersDescription = "Add, remove, and edit MCP servers.",
        addServerAria = "Add server",
        noServersMessage = "No MCP servers configured.",
        editServerAria = "Edit server",
        deleteServerAria = "Delete server",
        deleteServerDialogTitle = "Delete server?",
        deleteServerDialogText = { name -> "Are you sure you want to delete \"$name\"? This cannot be undone." },
        deleteConfirm = "Delete",
        cancel = "Cancel",
        nameLabel = "Name",
        transportLabel = "Transport",
        removeServerAria = "Remove server",
        sseUrlLabel = "SSE URL",
        reconnectionTimeLabel = "Reconnection time (seconds)",
        runAsProcessLabel = "Run as process",
        commandLabel = "Command (space-separated)",
        environmentLabel = "Environment (key=value; key2=value2)",
        selectorLabel = "MCP Servers",
        selectorEmpty = "No MCP servers available",
    ),
    prompts = PromptStrings(
        selectorLabel = "Prompt",
    ),
    roleplay = RoleplayStrings(
        deleteConfirm = "Delete",
        cancel = "Cancel",
        personaLabel = "Persona",
        personasTitle = "Personas",
        personasDescription = "Add, remove, and edit personas.",
        addPersonaAria = "Add persona",
        noPersonasConfigured = "No personas configured.",
        nicknamePrefix = { nickname -> "Nickname: $nickname" },
        withLorebook = "With lorebook",
        editPersonaAria = "Edit persona",
        deletePersonaAria = "Delete persona",
        deletePersonaDialogTitle = "Delete persona?",
        deletePersonaDialogText = { name -> "Are you sure you want to delete \"$name\"? This action cannot be undone." },
        nameLabel = "Name",
        nicknameLabel = "Nickname",
        defaultLorebookLabel = "Default Lorebook",
        saveAction = "Save",
        addAction = "Add",
        removePersonaAria = "Remove persona",
        lorebookLabel = "Lorebook",
        lorebookNone = "None",
        lorebookUnnamed = "Unnamed lorebook",
        importedLorebooksTitle = "Imported lorebooks",
        importedLorebooksDescription = "Import, list and delete lorebooks.",
        importLorebookAria = "Import lorebook",
        failedToLoadLorebooks = { msg -> "Failed to load lorebooks: $msg" },
        noLorebooksAvailable = "No lorebooks available.",
        deleteLorebookDialogTitle = "Delete lorebook?",
        deleteLorebookDialogText = { name -> "Are you sure you want to delete \"$name\"? This cannot be undone." },
        deleteLorebookAria = "Delete lorebook",
        characterTagsFilterTitle = "Character tags filter",
        characterTagsFilterDescription = "Tags listed here will be excluded when showing characters. Separate tags with commas.",
        characterTagsPlaceholder = "e.g. nsfw, beta, wip",
        importedCharactersTitle = "Imported characters",
        importedCharactersDescription = "Import, list and delete characters.",
        importCharactersAria = "Import characters",
        failedToLoadCharacters = { msg -> "Failed to load characters: $msg" },
        noCharactersAvailable = "No characters available.",
        deleteCharacterDialogTitle = "Delete character?",
        deleteCharacterDialogText = { name -> "Are you sure you want to delete \"$name\"? This cannot be undone." },
        deleteCharacterAria = "Delete character",
        hasCharacterBookAria = "Has character book",
        defaultPersonaTitle = "Default persona",
        defaultPersonaDescription = "Used as your persona in new roleplay conversations.",
        noPersonaDefined = "No persona defined yet",
        defaultPreferredModelTitle = "Default preferred model",
        defaultPreferredModelDescription = "Model used by default for new roleplay conversations.",
        noAvailableModels = "No available models",
        defaultSystemPromptTitle = "Default system prompt",
        defaultSystemPromptDescription = "Used when the character card doesn't define its own system prompt.",
        defaultLorebookSettingsTitle = "Default Lorebook settings",
        defaultLorebookSettingsDescription = "Used when the character card doesn't define its own lorebook configuration.",
        scanDepthLabel = "Scan depth",
        tokenBudgetLabel = "Token budget",
        recursiveScanningLabel = "Recursive scanning",
        greetingLabel = "Greeting",
        randomGreeting = "Random Greeting",
        greetingOptionLabel = { index, preview -> "Greeting ${index + 1}: $preview" },
    ),
    tools = ToolStrings(
        panelLabel = "Tools",
        emptyMessage = "No tools available",
    ),
    conversations = ConversationStrings(
        backAria = "Back",
        settingsAria = "Settings",
        listTitle = "Conversations",
        newConversationAria = "New conversation",
        emptyTitle = "No conversations yet",
        emptyBody = "Start a new conversation to see it here.",
        startNewButton = "Start new conversation",
        openConversationAria = "Open conversation",
        conversationAria = "Conversation",
        deleteConversationAria = "Delete conversation",
        deleteDialogTitle = "Delete conversation?",
        deleteDialogText = { title -> "Are you sure you want to delete \"$title\"This action cannot be undone." },
        deleteConfirm = "Delete",
        cancel = "Cancel",
        newConversationTitle = "New Conversation",
        createAria = "Create",
        qaNoModels = "No available models",
        qaNoToolModels = "No available models with tool support",
        rpNoCharactersOrModels = "No available characters or models",
        personaSettingsAria = "Persona Settings",
        additionalLorebookLabel = "Additional Lorebook",
        newConversationIconAria = "New conversation",
        inputPlaceholder = "Type a message",
        sendMessageAria = "Send the message",
        addAttachmentAria = "Add an attachment",
        newMessagesLabel = "New",
        toolUseVettingTitle = "Tool use vetting",
        agentCalledToolPrefix = "Agent called tool: ",
        detailsLabel = "Details",
        collapseAria = "Collapse",
        expandAria = "Expand",
        successAria = "Success",
        failureAria = "Failure",
    ),
    settings = SettingsStrings(
        listTitle = "Settings",
        selectSectionAria = "Select settings section",
        sectionTitles = mapOf(
            "appearance" to "Appearance",
            "mcp" to "MCP servers",
            "models" to "Model providers",
            "roleplay" to "Roleplay",
            "characters" to "Characters",
            "lorebooks" to "Lorebooks",
            "personas" to "Personas",
        ),
        appearanceBaseColorSchemeTitle = "Base color scheme",
        appearanceBaseColorSchemeDescription = "The color scheme used for the application.",
        appearanceBaseColorSchemeOptionDark = "Dark",
        appearanceBaseColorSchemeOptionLight = "Light",
        appearanceBaseColorSchemeOptionSystem = "Adapt to system",
    ),
)
